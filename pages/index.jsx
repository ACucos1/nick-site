import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect } from "react";
import styles from "../styles/Home.module.scss";

export default function Home() {
  const router = useRouter();

  useEffect(() => {
    function TextType(el, toRotate, period) {
      this.toRotate = toRotate;
      this.el = el;
      this.loopNum = 0;
      this.period = parseInt(period, 10) || 2000;
      this.txt = "";
      this.tick();
      this.isDeleting = false;
    }

    TextType.prototype.tick = function () {
      var i = this.loopNum % this.toRotate.length;
      var fullTxt = this.toRotate[i];

      if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
      } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
      }

      this.el.innerHTML = `We Create <span className={styles.TypeText}>${this.txt}</span>`;

      var that = this;
      var delta = 200 - Math.random() * 100;
      if (this.isDeleting) delta /= 2;

      if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
      } else if (this.isDeleting && this.txt === "") {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
      }

      setTimeout(() => {
        that.tick();
      }, delta);
    };

    window.onload = function () {
      var elements = document.querySelectorAll(".typewrite");
      for (let i = 0; i < elements.length; i++) {
        let toRotate = elements[i].getAttribute("data-type");
        let period = elements[i].getAttribute("data-period");
        if (toRotate) {
          new TextType(elements[i], JSON.parse(toRotate), period);
        }
      }
    };
  }, []);

  return (
    <div className={`${styles.container} `}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <section className={styles.Main}>
        <div className={`${styles.MainInner} fade-in`}>
          <div
            className={`${styles.HeroText} typewrite`}
            data-period='2000'
            data-type='["Workflows.", "Processes.", "Businesses."]'>
            We create{" "}
            <span className={`${styles.TypeText}`}>textwillchange.</span>
          </div>
        </div>
      </section>

      <section id='projects' className={styles.Projects}>
        <div className={`${styles.ProjectsInner} fade-in`}>
          <div className={`${styles.GridItem} fade-in`}></div>
          <div className={`${styles.GridItem} fade-in`}></div>
          <div className={`${styles.GridItem} fade-in`}></div>
          <div className={`${styles.GridItem} fade-in`}></div>
        </div>
      </section>

      <section id='about' className={`${styles.AboutBlurb}`}>
        <div className={`${styles.AboutBlurbInner} fade-in`}>
          <p>
            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Saepe et
            libero amet rerum, animi repellat dolores similique accusamus.
            Repellendus cupiditate ex commodi, libero provident voluptatum!
            Magnam reprehenderit delectus amet, exercitationem explicabo, id
            distinctio culpa quod quis quae quisquam. Rem saepe adipisci enim
            asperiores quos esse ab accusamus quam commodi dolorum.
          </p>
        </div>
      </section>
    </div>
  );
}
